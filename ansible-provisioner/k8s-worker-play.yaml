---
- hosts: all
  become: true
  tasks:
    # Install Docker and its dependent components
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
      notify:
        - docker status

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker

    # Kubelet will not start if the system has swap enabled/active, disable swap
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap if present
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    # Install kubelet, kubeadm and kubectl
    - name: Adding the apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install the Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl

    # Configure node ip address
    - name: Configure node ip
      lineinfile:
        create: yes
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
    
    # Restart the kubelet
    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    # Copy the cluster join command to the server and join to cluster
    - name: Copy the cluster join command to server location
      copy: src=cluster-join dest=/tmp/cluster-join.sh mode=0777

    - name: Join the node to cluster
      command: sh /tmp/cluster-join.sh

  handlers:
    # Make sure that docker is started and running
    - name: docker status
      service: name=docker state=started
